apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/name: "fltk.orchestrator"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    fltk.service: fl-server
  name: fl-server
spec:
  containers:
    - command:
        - python3
        - -m
        - fltk
      args:
        - cluster
        - {{ .Values.fltk.configDir }}/{{ .Values.orchestrator.runtime.configurationFile }}  # The configuration file (generator settings & logging)
        - {{ .Values.fltk.configDir }}/{{ .Values.orchestrator.runtime.experimentFile }}     # The experiment file (arrivals)
      env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: IMAGE_NAME
          value: {{ .Values.provider.domain }}/{{ .Values.provider.projectName }}/{{ .Values.provider.imageName }}
      image: {{ .Values.provider.domain }}/{{ .Values.provider.projectName }}/{{ .Values.provider.imageName }}
      name: federation-lab-server
      resources:
        limits:
          cpu: {{ (.Values.orchestrator.cpu | int) }}
          memory: {{ (.Values.orchestrator.memory | int) }}
      volumeMounts:
        - name: fl-server-log-volume
          mountPath: {{ .Values.fltk.workDir }}/output
          readOnly: true
        - name: fltk-orchestrator-config-volume
          mountPath: {{ .Values.fltk.workDir }}/{{ .Values.fltk.configDir }}
          readOnly: true
  restartPolicy: Never
  volumes:
    - name: fl-server-log-volume
      persistentVolumeClaim:
        claimName: fl-server-claim
    - name: fltk-orchestrator-config-volume
      projected:
        sources:
        - configMap:
            name: fltk-orchestrator-config
        - configMap:
            name: fltk-experiment-config
